<?xml version="1.0"?>
<doc>
    <assembly>
        <name>L10NSharp</name>
    </assembly>
    <members>
        <member name="T:L10NSharp.CodeReader.ILInstruction">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.ILInstruction.#ctor(System.Reflection.Emit.OpCode,System.Object)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.CodeReader.ILReader">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.ILReader.#cctor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.ILReader.#ctor(System.Reflection.MethodBase)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.ILReader.GetEnumerator">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.ILReader.System#Collections#IEnumerable#GetEnumerator">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.ILReader.Next">
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.CodeReader.StringExtractor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.StringExtractor.ExtractFromNamespaces">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.StringExtractor.DoExtractingWork(System.String[],System.ComponentModel.BackgroundWorker)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.StringExtractor.GetTypesToScan(System.Collections.Generic.ICollection{System.String})">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.StringExtractor.GetAllAssemblies">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a list of all assemblies referenced by the entry assembly
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.StringExtractor.FindLocalizedStringsInType(System.Type)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.StringExtractor.FindGetStringCalls(System.Reflection.MethodBase,System.Reflection.MethodInfo)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.StringExtractor.GetInfoForCallToLocalizeExtension(System.Reflection.Module,System.Int32,System.Int32)">
            <summary>
            This is special because, as an extension method the 1st parameter in "hello".Localize("myapp.greeting") will be the string ("hello") itself,
            which is backwards from the convention used in the GetString(id, theString, etc.)
            </summary>
        </member>
        <member name="M:L10NSharp.CodeReader.StringExtractor.GetInfoForCallToGetStringMethod(System.Reflection.Module,System.Int32,System.Int32)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.StringExtractor.FindExtenderCalls(System.Reflection.MethodBase)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.StringExtractor.GetFieldName(System.Reflection.Module,L10NSharp.CodeReader.ILInstruction)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.StringExtractor.GetLocInfoForField(System.String,System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.CodeReader.StringExtractor.LocInfoDistinctComparer">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.StringExtractor.LocInfoDistinctComparer.Equals(L10NSharp.LocalizingInfo,L10NSharp.LocalizingInfo)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.CodeReader.StringExtractor.LocInfoDistinctComparer.GetHashCode(L10NSharp.LocalizingInfo)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.DontShowThisAgainButton.GetOKToShow(System.Configuration.ApplicationSettingsBase,System.String)">
            <summary>
            Call this to decide whether to show the dialog
            </summary>
            <param name="settings">enter your Settings.Default. Make sure you have a string property named DontShowThisAgain</param>
            <param name="key">A key to use for the list of things not-to-show. You're welcome to use a big long string (like a tip message itself); a hash will be used</param>
            <returns>true if you should show it</returns>
        </member>
        <member name="M:L10NSharp.DontShowThisAgainButton.CloseIfShouldNotShow(System.Configuration.ApplicationSettingsBase,System.String)">
            <summary>
            This one uses the form's name as an id
            </summary>
            <param name="settings">Your Settings.Default</param>
            <param name="customID">Some string which can be used as a key into the don't-show index</param>
        </member>
        <member name="M:L10NSharp.DontShowThisAgainButton.ResetDontShowMemory(System.Configuration.ApplicationSettingsBase)">
            <summary>
            Start showing all dialogs again
            </summary>
        </member>
        <member name="F:L10NSharp.DontShowThisAgainButton.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:L10NSharp.DontShowThisAgainButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:L10NSharp.DontShowThisAgainButton.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:L10NSharp.UI.HowToDistributeDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:L10NSharp.UI.HowToDistributeDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:L10NSharp.UI.HowToDistributeDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:L10NSharp.UI.LanguageChoosingDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:L10NSharp.UI.LanguageChoosingDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:L10NSharp.UI.LanguageChoosingDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:L10NSharp.UI.TipDialog.#ctor(System.String,System.String,System.Drawing.Image)">
            <summary>
            Use this one if you need to customize the dialog, e.g. to setup an alternate button
            </summary>
        </member>
        <member name="F:L10NSharp.UI.TipDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:L10NSharp.UI.TipDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:L10NSharp.UI.TipDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:L10NSharp.Utility.HttpUtilityFromMono.HtmlDecode(System.String)">
            <summary>
            Decodes an HTML-encoded string and returns the decoded string.
            </summary>
            <param name="s">The HTML string to decode. </param>
            <returns>The decoded text.</returns>
        </member>
        <member name="M:L10NSharp.Utility.HttpUtilityFromMono.HtmlDecode(System.String,System.IO.TextWriter)">
            <summary>
            Decodes an HTML-encoded string and sends the resulting output to a TextWriter output stream.
            </summary>
            <param name="s">The HTML string to decode</param>
            <param name="output">The TextWriter output stream containing the decoded string. </param>
        </member>
        <member name="M:L10NSharp.Utility.HttpUtilityFromMono.HtmlEncode(System.String,System.IO.TextWriter)">
            <summary>
            HTML-encodes a string and sends the resulting output to a TextWriter output stream.
            </summary>
            <param name="s">The string to encode. </param>
            <param name="output">The TextWriter output stream containing the encoded string. </param>
        </member>
        <member name="T:L10NSharp.LocalizationManager">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.LocalizationManager.kDefaultLang">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.Create(System.String,System.String,System.String,System.String,System.String,System.String,System.Drawing.Icon,System.String,System.String[])">
            ------------------------------------------------------------------------------------
            <summary>
            Creates a new instance of a localization manager for the specifed application id.
            If a localization manager has already been created for the specified id, then
            that is returned.
            </summary>
            <param name="desiredUiLangId">The language code of the desired UI language. If
            there are no translations for that ID, a message is displayed and the UI language
            falls back to the default.</param>
            <param name="appId">The application Id (e.g. 'Pa' for Phonology Assistant).
            This should be a unique name that identifies the manager for an assembly or
            application.</param>
            <param name="appName">The application's name. This will appear to the user
            in the localization dialog box as a parent item in the tree.</param>
            <param name="appVersion"></param>
            <param name="directoryOfInstalledTmxFiles">The full file path of the original TMX files
            installed with the application.</param>
            <param name="directoryOfUserModifiedTmxFiles">The full file path where to copy the TMX files
            found in 'directoryOfInstalledTmxFiles' so they can be edited by the user. If the
            value is null, the default location is used (which is appName combined with 
            Environment.SpecialFolder.CommonApplicationData)</param>
            <param name="applicationIcon"> </param>
            <param name="emailForSubmissions">This will be used in UI that helps the translator
            know what to do with their work</param>
            <param name="namespaceBeginnings">A list of namespace beginnings indicating
            what types to scan for localized string calls. For example, to only scan
            types found in Pa.exe and assuming all types in that assembly begin with
            'Pa', then this value would only contain the string 'Pa'.</param>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[])">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.CreateOrUpdateDefaultTmxFileIfNecessary(System.String[])">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.CopyInstalledTmxFilesToWritableLocation(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.Dispose">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.SetUILanguage(System.String,System.Boolean)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetUILanguages(System.Boolean)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.ShowLocalizationDialogBox(System.Boolean)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.ShowLocalizationDialogBox(System.Object)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.ShowLocalizationDialogBox(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.RegisterObjectForLocalizing(System.Object,System.String,System.String,System.String,System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Adds the specified object to the localization manager's cache of objects to be
            localized and then applies localizations for the current UI language.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.PrepareObjectForRuntimeLocalization(System.Object)">
            ------------------------------------------------------------------------------------
            <summary>
            Prepares the specified object for runtime localization by subscribing to a
            mouse down event that will monitor whether or not to show the localization
            dialog box.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.SaveIfDirty">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetTmxPathForLanguage(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.AddString(System.String,System.String,System.String,System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Add a localized string to the string cache.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetLocalizedString(System.Object,System.String,System.String,System.String,System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the localized text for the specified object.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetLocalizedString(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the localized text for the specified id.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetStringFromStringCache(System.String,System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetTooltipFromStringCache(System.String,System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetShortCutKeyFromStringCache(System.String,System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetStringForObject(System.Object,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the text for the specified object. The englishText is returned when the text
            for the specified object cannot be found for the current UI language.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetString(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a string for the specified string id. The englishText is returned when
            a string cannot be found for the specified id and the current UI language.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetString(System.String,System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a string for the specified string id. The englishText is returned when
            a string cannot be found for the specified id and the current UI language.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetString(System.String,System.String,System.String,System.Object)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a string for the specified string id. The englishText is returned when
            a string cannot be found for the specified id and the current UI language.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetString(System.String,System.String,System.String,System.String,System.String,System.Object)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a string for the specified string id. The englishText is returned when
            a string cannot be found for the specified id and the current UI language.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetDynamicString(System.String,System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a string for the specified application id and string id. When a string for the
            specified id cannot be found, then one is added  using the specified englishText is
            returned when a string cannot be found for the specified id and the current UI
            language.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetDynamicString(System.String,System.String,System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a string for the specified application id and string id. When a string for the
            specified id cannot be found, then one is added  using the specified englishText is
            returned when a string cannot be found for the specified id and the current UI
            language.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetIsStringAvailableForLangId(System.String,System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.StripOffLocalizationInfoFromText(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetStringFromAnyLocalizationManager(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetLocalizationManagerForObject(System.Object)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetLocalizationManagerForString(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.ReapplyLocalizationsToAllObjectsInAllManagers">
            ------------------------------------------------------------------------------------
            <summary>
            Reapplies the localizations to all objects in the localization manager's cache of
            localized objects.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.ReapplyLocalizationsToAllObjects(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Reapplies the localizations to all objects in the localization manager's cache of
            localized objects.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.ReapplyLocalizationsToAllObjects">
            ------------------------------------------------------------------------------------
            <summary>
            Reapplies the localizations to all objects in the localization manager's cache of
            localized objects.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.RefreshToolTips">
            ------------------------------------------------------------------------------------
            <summary>
            Recreates the tooltip control and updates the tooltip text for each object having
            a tooltip. This is necessary sometimes when controls get moved from form to form
            during runtime.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.ApplyLocalization(System.Object)">
            ------------------------------------------------------------------------------------
            <summary>
            Initializes the specified control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.ApplyLocalizationsToControl(System.Windows.Forms.Control,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Initializes the specified control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.ApplyLocalizedToolTipToControl(System.Windows.Forms.Control,System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.GetRealTopLevelControl(System.Windows.Forms.Control)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the real top level control (using the control's TopLevelControl property
            seems to return null until the control is on a form).
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.HandleToolTipRefChanged(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles the case when a tooltip instance was created and assinged to a top level
            control that has now been added to another control, thus making the other control
            top level instead. Therefore, we need to make sure the tooltip is reassigned to
            the new top level control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.HandleToolTipRefDestroyed(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles removing tooltip controls from the global tool tip collection for top level
            controls that are destroyed and have controls on them using tool tip controls from
            that collection.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.ApplyLocalizationsToToolStripItem(System.Windows.Forms.ToolStripItem,System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.ApplyLocalizationsToListViewColumnHeader(System.Windows.Forms.ColumnHeader,System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.ApplyLocalizationsToDataGridViewColumn(System.Windows.Forms.DataGridViewColumn,System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.HandleToolStripItemMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles Ctrl-Shift-Click on ToolStripItems;
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.HandleToolStripItemDisposed(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles the tool strip item disposed.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.HandleControlMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles Ctrl-Shift-Click on controls.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.HandleControlHandleDestroyed(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.HandleListViewColumnHeaderClicked(System.Object,System.Windows.Forms.ColumnClickEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles ListView column header clicks. Unfortunately, even if the localization
            dialog box is shown, this click on the header will not get eaten (like it does
            for other controls). Therefore, if clicking on the column header sorts the column,
            that sorting will take place after the dialog box is closed.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.HandleListViewHandleDestroyed(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            When controls get destroyed, do a little clean up.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.HandleDataGridViewCellMouseDown(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.HandleDataGridViewHandleDestroyed(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            When controls get destroyed, do a little clean up.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizationManager.ToString">
            ------------------------------------------------------------------------------------
        </member>
        <member name="E:L10NSharp.LocalizationManager.LaunchingLocalizationDialog">
            <summary>
            These two events allow us to know when the localization dialog is running.
            For example, HearThis needs to turn off some event prefiltering.
            </summary>
        </member>
        <member name="P:L10NSharp.LocalizationManager.LoadedManagers">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizationManager.FallbackLanguageIds">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the list of langauges (by id) used to fallback to when looking for a
            string in the current UI language fails. The fallback order goes from the first
            item in this list to the last.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizationManager.UILanguageId">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the current UI language Id (i.e. the target language).
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizationManager.Id">
            ------------------------------------------------------------------------------------
            <summary>
            This is what identifies a localization manager for a particular set of
            localized strings. This would likely be a DLL or EXE name like 'PA' or 'SayMore'.
            This will be the file name of the portion of the TMX file in which localized
            strings are stored. This would usually be the name of the assembly that owns a
            set of localized strings.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizationManager.Name">
            ------------------------------------------------------------------------------------
            <summary>
            This is the presentable name for the set of localized strings. For example, the
            Id might be 'PA' but the LocalizationSetName might be 'Phonology Assistant'.
            This should be a name presentable to the user.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizationManager.AppVersion">
            ------------------------------------------------------------------------------------
            <summary>
            This is sent from the application that's creating the localization manager. It's
            written to the TMX file and used to determine whether or not the application needs
            to be rescanned for localized strings.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizationManager.DefaultStringFilePath">
            ------------------------------------------------------------------------------------
            <summary>
            Full file name and path to the default string file (i.e. English strings).
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizationManager.StringCache">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizationManager.CanCustomizeLocalizations">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a value indicating whether or not user has authority to change localized strings.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizationManager.TmxFileFolder">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the full path (without file nanme) to the TMX file.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizationManager.EnableClickingOnControlToBringUpLocalizationDialog">
            ------------------------------------------------------------------------------------
            <summary>
            Set this to false to make Localization Manager ignore clicks on the UI
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.LocalizedStringCache">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.LocalizedStringCache.kHardLineBreakReplacementProperty">
            <summary>
            review: I (JH) don't knowhat this is about
            </summary>
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.#ctor(L10NSharp.LocalizationManager)">
            ------------------------------------------------------------------------------------
            <summary>
            Loads the string cache from all the specified tmx files
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.MergeTmxFilesIntoCache(System.Collections.Generic.IEnumerable{System.String})">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.CreateEmptyStringFile">
            ------------------------------------------------------------------------------------
            <summary>
            Creates an empty string file.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.UpdateLocalizedInfo(L10NSharp.LocalizingInfo)">
            ------------------------------------------------------------------------------------
            <summary>
            Updates the localized info. in the cache with the info. from the specified
            LocalizedObjectInfo.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.SaveIfDirty">
            ------------------------------------------------------------------------------------
            <summary>
            Saves the cache to the file from which the cache was originally loaded, but only
            if the cache is dirty. If the cache is dirty and saved, then true is returned.
            Otherwise, false is returned.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.SaveFileForLangId(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.TuComparer(L10NSharp.TMXUtils.TransUnit,L10NSharp.TMXUtils.TransUnit)">
            ------------------------------------------------------------------------------------
            <summary>
            Compares two translation units for equality.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.DoTranslationsExist(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a value indicating whether or not translations exist for the specified
            string id for the current language id.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.GetString(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the localized text for the specified id and suffix.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.GetString(System.String,System.String,System.Boolean)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the localized text for the specified id and suffix. If formatForDisplay is
            true, then the string will have ampersands and newlines converted so the text
            is displayed nicely at runtime.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.GetToolTipText(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the localized tooltip text for the specified id and suffix.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.GetToolTipText(System.String,System.String,System.Boolean)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the localized tooltip text for the specified id and suffix. If
            formatForDisplay is true, then the string will have ampersands and newlines
            converted so the text is displayed nicely at runtime.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.GetShortcutKeys(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the localized tooltip text for the specified id and suffix.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.GetShortcutKeysText(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the localized tooltip text for the specified id and suffix.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.GetValueForLangAndId(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Tries to get a string value for the specified id, starting with the current
            language id. If that fails, then the fall back language id is used and if that
            fails, then the default (i.e. "en") is used.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.GetValueForLangAndId(System.String,System.String,System.Boolean)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the localized value for the specified id. If formatForDisplay is true, then
            the string will have ampersands and newlines converted so the text is displayed
            nicely at runtime.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.GetComment(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the comment for the specified id.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.GetGroup(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the group for the specified id.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.GetPriority(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the priority for the specified id.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.GetCategory(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the category for the specified id.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.GetBaseId(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the base id for the specified translation unit id. For each UI object, there
            may be up to three translation unit (all having their own id). One for the object's
            text, one for the object's tooltip and one for the object's shortcut keys. The
            translation unit id for the tooltip and shortcutkeys are just the text's id
            with a suffix added. This method will receive a translation unit id and strip off
            either of those suffixes, if they are present.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.LoadGroupNodes(System.Windows.Forms.TreeNodeCollection)">
            ------------------------------------------------------------------------------------
            <summary>
            Loads the specified tree node collection with all the string groups and their
            localizable string ids.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.GetTranslationUnitsForTree">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a list of only those translation units that should show up in the localizing
            dialog's tree control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizedStringCache.ParseGroupAndId(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Parses the group and id and returns all the pieces between periods.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizedStringCache.IsDirty">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a value indicating whether the cache has unsaved changes.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.LocalizationPriority">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.LocalizationPriority.High">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationPriority.MediumHigh">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationPriority.Medium">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationPriority.MediumLow">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationPriority.Low">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationPriority.NotLocalizable">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationPriority.InternalUseOnly">
            <summary>
            Do not use this value when passing method from outside 
            the localization utils. assembly.
            </summary>
        </member>
        <member name="T:L10NSharp.LocalizationCategory">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.LocalizationCategory.DontCare">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.WindowOrDialog">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.TabPage">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.MenuItem">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.ToolbarOrStatusBarItem">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.Button">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.ComboBox">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.TextBox">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.Label">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.ListViewColumnHeading">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.DataGridViewColumnHeading">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.RadioButton">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.CheckBox">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.LinkLabel">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.SidebarItem">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.ErrorOrWarningMessage">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.Question">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.UndoRedoMessage">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.GeneralMessage">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.Other">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.LocalizationCategory.Unspecified">
            <summary></summary>
        </member>
        <member name="T:L10NSharp.UpdateFields">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.LocalizingInfo">
            ----------------------------------------------------------------------------------------
            <summary>
            This class is used to keep track of all the localization information (i.e. extended
            properties of the LocalizationExtender) for a single object extended by the
            LocalizationExtender. The type of object is either a Control or ToolStripItem and
            the information kept track of is the text, tooltip, shortcut keys, localization
            priority, comment and localization category.
            </summary>
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizingInfo.#ctor(System.Object)">
            ------------------------------------------------------------------------------------
            <summary>
            Initializes a new instance of the <see cref="T:L10NSharp.LocalizingInfo"/> class.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizingInfo.#ctor(System.Object,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Initializes a new instance of the <see cref="T:L10NSharp.LocalizingInfo"/> class.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizingInfo.#ctor(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Initializes a new instance of the <see cref="T:L10NSharp.LocalizingInfo"/> class.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizingInfo.MakeId(System.Object,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Sets the id.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizingInfo.MakeIdForCtrl(System.Windows.Forms.Control)">
            ------------------------------------------------------------------------------------
            <summary>
            Sets the id for CTRL.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizingInfo.MakeIdForColumnHeader(System.Windows.Forms.ColumnHeader)">
            ------------------------------------------------------------------------------------
            <summary>
            Makes an id for a column header.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizingInfo.MakeIdForDataGridViewColumn(System.Windows.Forms.DataGridViewColumn)">
            ------------------------------------------------------------------------------------
            <summary>
            Makes an id for a DataGridView column.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizingInfo.GetIdFromText(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizingInfo.GetIdPrefix(System.Windows.Forms.Control)">
            ------------------------------------------------------------------------------------
            <summary>
            Tries to get the name of the form that hosts the specified control. That name is
            used as the prefix for a localization id.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizingInfo.OwningFormName(System.Windows.Forms.ToolStripItem)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the name of the form to which the specified ToolStripItem belongs.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.LocalizingInfo.GetCategory(System.Object)">
            ------------------------------------------------------------------------------------
            <summary>
            Returns the localization category for the specified object.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.LocalizingInfo.DiscoveredDynamically">
            <summary>
            We need to record this so that the string won't be marked as "unused" the next time the static scanner runs.
            For dynamic strings, we actually have no way of knowing if they are still used or not.
            </summary>
        </member>
        <member name="P:L10NSharp.LocalizingInfo.IsEmpty">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizingInfo.Id">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the id.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizingInfo.Obj">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizingInfo.LangId">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the language id.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizingInfo.UpdateFields">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the comment.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizingInfo.Comment">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the comment.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizingInfo.Priority">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the priority.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizingInfo.Category">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the category.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizingInfo.Group">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the group.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizingInfo.ToolTipText">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the tooltip.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizingInfo.ShortcutKeys">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the shortcutKeys.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.LocalizingInfo.Text">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the text of the object.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:L10NSharp.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:L10NSharp.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:L10NSharp.Properties.Resources.kimidBing">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:L10NSharp.Properties.Resources.kimidCopyTranslation">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:L10NSharp.Properties.Resources.kimidCopyTranslationBig">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:L10NSharp.Properties.Resources.kimidGoogle">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:L10NSharp.Properties.Resources.kimidMoveNext">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:L10NSharp.Properties.Resources.kimidMovePrevious">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:L10NSharp.Properties.Resources.Move">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:L10NSharp.Properties.Resources.Move_down">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:L10NSharp.Properties.Resources.Move_up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:L10NSharp.Properties.Resources.SelectAllRows">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="M:L10NSharp.TransUnitUpdater.#ctor(L10NSharp.TMXUtils.TMXDocument)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TransUnitUpdater.Update(L10NSharp.LocalizingInfo)">
            ------------------------------------------------------------------------------------
            <summary>
            Updates the localized info. in the cache with the info. from the specified
            LocalizedObjectInfo.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TransUnitUpdater.UpdateValue(L10NSharp.TMXUtils.TransUnit,System.String,L10NSharp.LocalizingInfo,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Updates the value for the specified translation unit with the specified new value.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ColorHelper.CalculateColor(System.Drawing.Color,System.Drawing.Color,System.Int32)">
            -------------------------------------------------------------------------------------
             <summary>
             Calculates a color by applying the specified alpha value to the specified front
             color, assuming the color behind the front color is the specified back color. The
             returned color has the alpha channel set to completely opaque, but whose alpha
             channel value appears to be the one specified.
             </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ColorHelper.MakeDisabledImage(System.Drawing.Image,System.Drawing.Color)">
            ------------------------------------------------------------------------------------
            <summary>
            Takes and image and converts it to a disabled-looking image.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.ColorHelper.LightHighlight">
            ------------------------------------------------------------------------------------
            <summary>
            Returns a lightened up version of the system's hightlight color.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.ColorHelper.LightLightHighlight">
            ------------------------------------------------------------------------------------
            <summary>
            Returns a very lightened up version of the system's hightlight color.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.CustomDropDownComboBox">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.CustomDropDownComboBox.PopupClosed">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.CustomDropDownComboBox.#ctor">
            ------------------------------------------------------------------------------------
            <summary>
            Initializes a new instance of the <see cref="T:L10NSharp.UI.CustomDropDownComboBox"/> class.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.CustomDropDownComboBox.OnPopupClosed(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles the VisibleChanged event of the m_popupCtrl control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.CustomDropDownComboBox.OnResize(System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            This will center the text box vertically within the control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.CustomDropDownComboBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.CustomDropDownComboBox.m_button_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles the painting the button.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.CustomDropDownComboBox.PaintNonThemeButton(System.Drawing.Graphics,System.Windows.Forms.ButtonState)">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.CustomDropDownComboBox.m_button_MouseEnter(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.CustomDropDownComboBox.m_button_MouseLeave(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.CustomDropDownComboBox.m_button_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.CustomDropDownComboBox.m_button_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.CustomDropDownComboBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:L10NSharp.UI.CustomDropDownComboBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:L10NSharp.UI.CustomDropDownComboBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:L10NSharp.UI.CustomDropDownComboBox.Text">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.CustomDropDownComboBox.BackColor">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the background color for the control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.CustomDropDownComboBox.TextBox">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.CustomDropDownComboBox.AlignDropToLeft">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a value indicating whether or not the left edge of the drop-down is aligned
            with the left edge of the combo control. To align the left edges, set this value
            to true. To align the right edge of the drop-down, set this value to false.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.CustomDropDownComboBox.PopupCtrl">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the popup Control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.EditSourceBeforeTranslatingDlg.#ctor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.EditSourceBeforeTranslatingDlg.#ctor(System.String,System.String,System.String,System.String,L10NSharp.Translators.ITranslator)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.EditSourceBeforeTranslatingDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:L10NSharp.UI.EditSourceBeforeTranslatingDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:L10NSharp.UI.EditSourceBeforeTranslatingDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:L10NSharp.UI.FallbackLanguagesDlg">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.FallbackLanguagesDlg.#ctor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.FallbackLanguagesDlg.UpdateDisplay">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.FallbackLanguagesDlg._buttonAdd_Click(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.FallbackLanguagesDlg._buttonRemove_Click(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.FallbackLanguagesDlg._buttonMoveUp_Click(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.FallbackLanguagesDlg._buttonMoveDown_Click(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.FallbackLanguagesDlg.MoveSelectedFallbackLanguage(System.Boolean)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.FallbackLanguagesDlg._listBoxAvailableLanguages_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.FallbackLanguagesDlg._listBoxFallbackLanguages_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.FallbackLanguagesDlg._listBoxFallbackLanguages_SelectedValueChanged(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.FallbackLanguagesDlg._listBoxAvailableLanguages_SelectedValueChanged(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.FallbackLanguagesDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:L10NSharp.UI.FallbackLanguagesDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:L10NSharp.UI.FallbackLanguagesDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:L10NSharp.UI.FallbackLanguagesDlg.FallbackLanguageIds">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.FallbackLanguagesDlg.SelectedAvailableLanguage">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.FallbackLanguagesDlg.SelectedFallbackLanguage">
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.L10NSharpExtender">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.#ctor(System.ComponentModel.IContainer)">
            ------------------------------------------------------------------------------------
            <summary>
            Constructor for instance that supports Class Composition designer.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.#ctor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.CanExtend(System.Object)">
            ------------------------------------------------------------------------------------
            <summary>
            Used to determine if a specific form component instance supports this attribute
            extension. Allows custom attributes to target specific control types.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.BeginInit">
            ------------------------------------------------------------------------------------
            <summary>
            Signals the object that initialization is starting.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.EndInit">
            ------------------------------------------------------------------------------------
            <summary>
            Signals the object that initialization is complete. This method will go through
            the collection of the controls that have been extended and adds to or udates the
            default values in the string files. Then each extended control is localized.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.FinalizationForListViewColumnHeaders">
            ------------------------------------------------------------------------------------
            <summary>
            Goes through all the extended controls to find those that are ListViews.
            For those list views, each column header is added to the list of extended controls
            and the list view is removed from the extended controls. That is because the only
            thing we support being extended on a list view are the column headings. The way
            this is done means that ids for column headings must be inferred from the column
            name and cannot be specified in the designer.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.FinalizationForDataGridViewColumns">
            ------------------------------------------------------------------------------------
            <summary>
            Goes through all the extended controls to find those that are DataGridViews.
            For those grids, each column is added to the list of extended controls and the
            grid is removed from the extended controls. That is because the only thing we
            support being extended on a DataGridView are the column headings. The way this
            is done means that ids for column headings must be inferred from the column
            name and cannot be specified in the designer.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.HandleGridColumnAdded(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.HandleGridDisposed(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.GetLocalizingId(System.Object)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the string id for the specified control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.SetLocalizingId(System.Object,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Sets the string id for the specified control. Use this method to keep track of all
            the controls being extended. This information will be used in the EndInit (i.e.
            after all the designer code has finished executing in InitializeComponents()).
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.GetLocalizationPriority(System.Object)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the level of importance for localizing the specified control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.SetLocalizationPriority(System.Object,L10NSharp.LocalizationPriority)">
            ------------------------------------------------------------------------------------
            <summary>
            Sets the level of importance for localizing the specified control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.GetLocalizationComment(System.Object)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the tooltip for the specified control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.SetLocalizationComment(System.Object,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Sets the tooltip for the specified control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.GetLocalizableToolTip(System.Object)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the tooltip for the specified control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.SetLocalizableToolTip(System.Object,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Sets the tooltip for the specified control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.L10NSharpExtender.GetLocalizedObjectInfo(System.Object)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the localized object info. for the specified object.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.L10NSharpExtender.LocalizationManagerId">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the id of the localization manager associated with this extender.
            This is only used at runtime so the extender can create a reference to one of the
            loaded localization managers stored in LocalizationManager.LoadedManagers.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.L10NSharpExtender.PrefixForNewItems">
            <summary>
            This id will be prepended to all new items added to this page.
            </summary>
        </member>
        <member name="P:L10NSharp.UI.L10NSharpExtender.ControlsNotExtended">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the collection of controls that are not extended.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.L10NSharpExtender.DesignMode">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a value indicating whether or not the extender is currently in design mode.
            I have had some problems with the base class' DesignMode property being true
            when in design mode. I'm not sure why, but adding a couple more checks fixes the
            problem.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.LocalizeItemDlg">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.ShowDialog(L10NSharp.LocalizationManager,System.Object,System.Boolean)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.ShowDialog(L10NSharp.LocalizationManager,System.String,System.Boolean)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.#ctor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.#ctor(L10NSharp.UI.LocalizeItemDlgViewModel,System.String,L10NSharp.LocalizationManager)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.Initialize">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.InitializeColorsAndFonts">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.OnShown(System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Get the splitter position from the caller.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleCheckingForTranslator(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.UpdateLanguageSensitiveControls">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.UpdateViewAfterSavingChange">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.ResetSingleItemView">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.UpdateSingleItemView">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.UpdateSingleItemViewForObject(System.Object)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.SaveChangesFromSingleItemView">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Allow delegates to save some settings.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.FireStringsLocalizedEvent">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.SaveDialogBoxSettings">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.GetDialogBoxSettings">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleTranslatorServiceButtonClick(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Translate the source text using Bing translating service.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.TranslateSelectedItems(System.Collections.Generic.IDictionary{System.Int32,L10NSharp.UI.LocTreeNode})">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleTreeViewBeforeSelect(System.Object,System.Windows.Forms.TreeViewCancelEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Update the string cache for the node the user is leaving.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleTreeViewAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Update the right side of the dialog with the information for the node just selected.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.btnCopyText_Click(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles the Click event of the btnCopyText control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.btnCopyToolTip_Click(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles the Click event of the btnCopyToolTip control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.btnCopyShortcutKeys_Click(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles the Click event of the btnCopyShortcutKeys control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.mnuCopyAll_Click(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles the Click event of the mnuCopyAll control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.tcboSearch_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles the KeyDown event of the tcboSearch control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.tcboSearch_Enter(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg._buttonMovePrev_Click(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Move to the previous leaf node in the tree.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg._buttonMoveNext_Click(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Move to the next leaf node in the tree.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleEditSourceBeforeTranslatingUsingBing(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleSourceLangChanged(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleTargetLangChanged(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleGridCellPainting(System.Object,System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleGridCellMouseEnter(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleGridCellMouseLeave(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleGridCurrentRowChanged(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleGridCellFormatting(System.Object,System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleGridCellValueNeeded(System.Object,System.Windows.Forms.DataGridViewCellValueEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleGridCellValuePushed(System.Object,System.Windows.Forms.DataGridViewCellValueEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleColumnHeaderMouseClick(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.UpdateGridSortGlyph">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg._buttonFallbackLanguages_Click(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.HandleGroupSrcTranslationPaint(System.Object,System.Windows.Forms.PaintEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Paint a faint line between the source translation and the source tooltip and
            shortcut keys text boxes.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.LocalizeItemDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:L10NSharp.UI.LocalizeItemDlg.SetDialogSettings">
            ------------------------------------------------------------------------------------
        </member>
        <member name="E:L10NSharp.UI.LocalizeItemDlg.SaveDialogSettings">
            ------------------------------------------------------------------------------------
        </member>
        <member name="E:L10NSharp.UI.LocalizeItemDlg.StringsLocalized">
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.LocalizeItemDlg.StringsLocalizedHandler">
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.LocalizeItemDlg.SetDialogSettingsHandler">
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.LocalizeItemDlg.SaveDialogSettingsHandler">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.#ctor(System.Boolean)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.SetLanguageIds(System.String,System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.SetCurrentNodeFromGridIndex(System.Int32)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.CreateTranslator">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.LoadTreeNodes(System.Windows.Forms.TreeView)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.FindNode(System.String,System.Windows.Forms.TreeNodeCollection)">
            ------------------------------------------------------------------------------------
            <summary>
            Finds the node in the specified node collection having the specified id. If a
            node cannot be found, then each nodes node collection will be searched, and so on.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.GetIsDirty">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.Save">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.SaveChangesInMemory(L10NSharp.LocalizingInfo)">
            ------------------------------------------------------------------------------------
            <summary>
            Saves localization changes.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.SaveChangesInMemory(L10NSharp.UI.LocTreeNode,L10NSharp.LocalizingInfo)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.GetObjectsForId(L10NSharp.LocalizationManager,System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.GetNumberOfTranslatedItemsString">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.GetObjIdFromAnyCache(System.Object)">
            ------------------------------------------------------------------------------------
            <summary>
            Goes through each loaded LocalizationManager, looking for the one whose object
            cache contains the specified object. When it's found, that object's id is returned.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.GetObjectsImage(System.Object)">
            ------------------------------------------------------------------------------------
            <summary>
            Attempts to get the image for the specified object, if one exists.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.GetFontForObject(System.Object)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.GetFirstObjectForId">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.Translate(System.Collections.Generic.IDictionary{System.Int32,L10NSharp.UI.LocTreeNode},System.Action{System.Int32,System.Int32})">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.HandleTanslateItems(System.Object,System.ComponentModel.DoWorkEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.GetLeafNodesOfNode(L10NSharp.UI.LocTreeNode)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.GetStringIdForGridIndex(System.Int32,System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.SortGridNodes">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.GetSourceTextForGridIndex(System.Int32)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.GetTargetTextForGridIndex(System.Int32)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.GetSourceToolTipForGridIndex(System.Int32)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.GetTargetToolTipForGridIndex(System.Int32)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.GetCommentForGridIndex(System.Int32)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.SetNodeColors">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.SetNodeColors(System.Windows.Forms.TreeNodeCollection)">
            ------------------------------------------------------------------------------------
            <summary>
            Sets the color of the specified node (and all its parents) based on whether or
            not the node represents a localization entry for which translations exist
            (other than for the default, that is).
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocalizeItemDlgViewModel.ShowEditSourceBeforeTranslatingDlg(System.Windows.Forms.IWin32Window)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LocalizeItemDlgViewModel.SrcLangId">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LocalizeItemDlgViewModel.TgtLangId">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LocalizeItemDlgViewModel.CurrentNode">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LocalizeItemDlgViewModel.CurrentNodeSourceText">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LocalizeItemDlgViewModel.CurrentNodeTargetText">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LocalizeItemDlgViewModel.CurrentNodeSourceToolTip">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LocalizeItemDlgViewModel.CurrentNodeTargetToolTip">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LocalizeItemDlgViewModel.CurrentNodeSourceShortcutKeys">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LocalizeItemDlgViewModel.CurrentNodeTargetShortcutKeys">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LocalizeItemDlgViewModel.CurrentNodeComment">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LocalizeItemDlgViewModel.TranslatorBusy">
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.NodeComparer">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.NodeComparer.#ctor(System.String,System.String,System.Windows.Forms.SortOrder,L10NSharp.UI.NodeComparer.SortField)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.NodeComparer.Compare(L10NSharp.UI.LocTreeNode,L10NSharp.UI.LocTreeNode)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.LocTreeNode">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocTreeNode.#ctor(L10NSharp.LocalizationManager,System.String,System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Initializes a new instance of the <see cref="T:L10NSharp.UI.LocTreeNode"/> class.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocTreeNode.GetText(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocTreeNode.GetToolTip(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocTreeNode.GetShortcutKeys(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocTreeNode.GetTranslatedText(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocTreeNode.GetTranslatedToolTip(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocTreeNode.GetTranslatedShortcutKeys(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocTreeNode.GetComment">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LocTreeNode.GetHasModifications(System.Boolean)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.PaintState">
            ------------------------------------------------------------------------------------
            <summary>
            Possible painting states for DrawHotBackground
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.PaintingHelper">
            ----------------------------------------------------------------------------------------
            <summary>
            Contains misc. static methods for various customized painting.
            </summary>
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PaintingHelper.CalculateColor(System.Drawing.Color,System.Drawing.Color,System.Int32)">
            -------------------------------------------------------------------------------------
             <summary>
             Calculates a color by applying the specified alpha value to the specified front
             color, assuming the color behind the front color is the specified back color. The
             returned color has the alpha channel set to completely opaque, but whose alpha
             channel value appears to be the one specified.
             </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PaintingHelper.DrawCustomBorder(System.Windows.Forms.Control)">
            ------------------------------------------------------------------------------------
            <summary>
            Draws around the specified control, a fixed single border the color of text
            boxes in a themed environment. If themes are not enabled, the border is black.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PaintingHelper.DrawCustomBorder(System.Windows.Forms.Control,System.Drawing.Color)">
            ------------------------------------------------------------------------------------
            <summary>
            Draws around the specified control, a fixed single border of the specified color.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PaintingHelper.DrawHotBackground(System.Drawing.Graphics,System.Drawing.Rectangle,L10NSharp.UI.PaintState)">
            ------------------------------------------------------------------------------------
            <summary>
            Draws a background in the specified rectangle that looks like a toolbar button
            when the mouse is over it, with consideration for whether the look should be like
            the mouse is down or not. Note, when a PaintState of normal is specified, this
            method does nothing. Normal background painting is up to the caller.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PaintingHelper.CanPaintVisualStyle(System.Windows.Forms.VisualStyles.VisualStyleElement)">
            ------------------------------------------------------------------------------------
            <summary>
            Returns a value indicating whether or not visual style rendering is supported
            in the application and if the specified element can be rendered.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PaintingHelper.CanPaintVisualStyle">
            ------------------------------------------------------------------------------------
            <summary>
            Returns a value indicating whether or not visual style rendering is supported
            in the application.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PaintingHelper.PaintDropDownContainer(System.IntPtr,System.Boolean)">
            ------------------------------------------------------------------------------------
            <summary>
            Because the popup containers forces a little padding above and below, we need to get
            the popup's parent (which is the popup container) and paint its background to match
            the menu color.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PaintingHelper.DrawGradientBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            ------------------------------------------------------------------------------------
            <summary>
            Fills the specified rectangle with a gradient background consistent with the
            current system's color scheme. 
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PaintingHelper.DrawGradientBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            ------------------------------------------------------------------------------------
            <summary>
            Fills the specified rectangle with a gradient background consistent with the
            current system's color scheme. 
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PaintingHelper.DrawGradientBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            ------------------------------------------------------------------------------------
            <summary>
            Fills the specified rectangle with a gradient background using the specified
            colors.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.NoToolStripBorderRenderer">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.InitializationProgressDlg">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.InitializationProgressDlg.#ctor(System.String,System.String[])">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.InitializationProgressDlg.OnShown(System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.InitializationProgressDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:L10NSharp.UI.InitializationProgressDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:L10NSharp.UI.InitializationProgressDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:L10NSharp.UI.ShortcutKeysDropDown">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysDropDown.#ctor">
            ------------------------------------------------------------------------------------
            <summary>
            Initializes a new instance of the <see cref="T:L10NSharp.UI.ShortcutKeysDropDown"/> class.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysDropDown.OnPopupClosed(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles the shortcut keys drop down closed.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysDropDown.SetCurrentKeysFromEditor">
            ------------------------------------------------------------------------------------
            <summary>
            Sets the current keys.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysDropDown.HandleTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Clears the shortcut keys when the user presses backspace or delete in the text
            box.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.ShortcutKeysDropDown.ShortcutKeys">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the shortcut keys.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.ShortcutKeysDropDown.ShortcutKeysAsString">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the shortcut keys as string.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.ShortcutKeysEditor">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.PopupControl">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.PopupControl.kBodyDarkColor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.PopupControl.kBodyLightColor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.PopupControl.kHeadDarkColor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.PopupControl.kHeadLightColor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.PopupControl.kHeadSeparatingLineColor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.PopupControl.m_mouseOver">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.PopupControl.m_timer">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.PopupControl.m_host">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.#ctor">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.Dispose(System.Boolean)">
            ------------------------------------------------------------------------------------
            <summary> 
            Clean up any resources being used.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.OnDropDownClosing(System.Object,System.Windows.Forms.ToolStripDropDownClosingEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles the Closing event of the m_owningDropDown control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.OnSizeChanged(System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.Show(System.Drawing.Point)">
            ------------------------------------------------------------------------------------
            <summary>
            Shows the popup at the specified screen location.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.Show(System.Windows.Forms.Control,System.Drawing.Point)">
            ------------------------------------------------------------------------------------
            <summary>
            Shows the popup at the specified location (which is relative to ctrl) with the
            specified owning control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.Hide">
            ------------------------------------------------------------------------------------
            <summary>
            Hides the popup.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.InitializeTimer">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.HandleTimerTick(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.OnTimerTick">
            ------------------------------------------------------------------------------------
            <summary>
            Fires when the timer Tick event occurs.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.OnMouseEntered(System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Fires the mouse entered event.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.OnMouseLeft(System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Fires the MouseLeft event.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.PaintBodyBackground(System.Drawing.Graphics)">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.PaintHeadingBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.PaintArrow(System.Drawing.Graphics,System.Int32,System.Drawing.Rectangle)">
            ------------------------------------------------------------------------------------
            <summary>
            Draws an arrow whose tip is at the specified Y location (or centered in the
            heading) and points to the left.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.PaintArrow(System.Drawing.Graphics,System.Int32,System.Drawing.Rectangle,System.Boolean)">
            ------------------------------------------------------------------------------------
            <summary>
            Draws an arrow whose tip is at the specified Y location (or centered in the
            heading).
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.PopupControl.CheckDesiredPopupLocation(System.Drawing.Point,System.Boolean@,System.Boolean@)">
            ------------------------------------------------------------------------------------
            <summary>
            Determines whether or not the popup's right or bottom edge will extend beyond the
            bounds of the screen if shown at the specified location.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.PopupControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:L10NSharp.UI.PopupControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:L10NSharp.UI.PopupControl.MouseEntered">
            ------------------------------------------------------------------------------------
        </member>
        <member name="E:L10NSharp.UI.PopupControl.MouseLeft">
            ------------------------------------------------------------------------------------
        </member>
        <member name="E:L10NSharp.UI.PopupControl.PopupClosed">
            ------------------------------------------------------------------------------------
        </member>
        <member name="E:L10NSharp.UI.PopupControl.PopupOpened">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.PopupControl.IsMouseOver">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a value indicating whether or not the mouse is over the panel or any
            controls in its control collection.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.PopupControl.OwningDropDown">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the owning drop-down control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.PopupControl.MonitorMouseOver">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets a value indicating whether or not the panel should keep track of
            when the mouse is over it or any controls contained therein.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysEditor.#ctor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysEditor.HandleOKButtonClick(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles the Click event of the btnOK control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysEditor.HandleResetButtonClick(System.Object,System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles the Click event of the btnReset control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysEditor.Reset">
            ------------------------------------------------------------------------------------
            <summary>
            Resets the contents of the control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysEditor.KeysFromString(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Convert the specified Keys value to a string representation.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysEditor.KeysToString(System.Windows.Forms.Keys)">
            ------------------------------------------------------------------------------------
            <summary>
            Convert the specified Keys value to a string representation.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysEditor.GetStringFromNonModifierKeys(System.Windows.Forms.Keys)">
            ------------------------------------------------------------------------------------
            <summary>
            For the values in the Keys enumeration that represent the number keys (i.e. those
            across the top of the keyboard, Keyses the string.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysEditor.GetNonModifierKeyFromString(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysEditor.OnDropDownClosing(System.Object,System.Windows.Forms.ToolStripDropDownClosingEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            I found that when the combo box is dropped down and part of the drop-down window
            is below (i.e. outside) the bounds of this control, clicking the mouse anywhere
            in the combo's drop-down that is below the bounds of this control will make the
            this popup control get dismissed. Argh! Therefore, we'll cancel the closing when
            the mouse location is over the combo's drop-down.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysEditor.HandleDrawButtonBackground(L10NSharp.UI.XButton,System.Windows.Forms.PaintEventArgs,L10NSharp.UI.PaintState)">
            ------------------------------------------------------------------------------------
            <summary>
            Paints the background of the OK and Reset buttons.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.ShortcutKeysEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:L10NSharp.UI.ShortcutKeysEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:L10NSharp.UI.ShortcutKeysEditor.SelectedKeysAsString">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the the selected keys as a string or sets the selected keys from a string.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.ShortcutKeysEditor.SelectedKeys">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the the selected keys.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.LmButtonCell">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.IsPointOverButton(System.Drawing.Point,System.Boolean)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a value indicating whether or not the specified point is over the cell's
            radio button. The relativeToCell flag is true when the specified point's origin
            is relative to the upper right corner of the cell. When false, it's assumed the
            point's origin is relative to the cell's owning grid control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.OnMouseLeave(System.Int32)">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Monitor when the mouse button goes down over the button.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Monitor when the user releases the mouse button.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.ManageButtonToolTip">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle)">
            ------------------------------------------------------------------------------------
            <summary>
            Draws the button in the cell.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.DrawMinimalistButton(System.Drawing.Graphics,System.Drawing.Rectangle)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.DrawVisualStyledButton(L10NSharp.UI.LmButtonColumn.ButtonType,System.Drawing.IDeviceContext,System.Drawing.Rectangle)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.AdjustRectToDefaultComboButtonWidth(System.Drawing.Rectangle)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.DrawPlainButton(L10NSharp.UI.LmButtonColumn.ButtonType,System.Drawing.Graphics,System.Drawing.Rectangle)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.DrawCellText(System.Drawing.IDeviceContext,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Drawing.Rectangle)">
            ------------------------------------------------------------------------------------
            <summary>
            Draws the cell's text.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.GetVisualStylePushButton">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the correct visual style push button given the state of the cell.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.GetVisualStyleComboButton">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the correct visual style combo button given the state of the cell.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonCell.GetRectangles(System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the rectangle for the radio button and the text, given the specified cell
            bounds.
            </summary>
            <param name="bounds">The rectangle of the entire cell.</param>
            <param name="rcbtn">The returned rectangle for the button.</param>
            <param name="rcText">The returned rectangle for the text.</param>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmButtonCell.Enabled">
            ------------------------------------------------------------------------------------
            <summary>
            Repaint the cell when it's enabled property changes.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmButtonCell.OwningButtonColumn">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the cell's owning SilButtonColumn.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmButtonCell.ShowButton">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a value indicating whether or not the cell's button should be shown.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.LmButtonColumn">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonColumn.#ctor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonColumn.#ctor(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonColumn.#ctor(System.String,System.Boolean)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonColumn.OnDataGridViewChanged">
            ------------------------------------------------------------------------------------
            <summary>
            Need to save the value of the owning grid's ShowCellToolTips value because we may
            change it once in a while.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonColumn.ShowToolTip">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonColumn.HideToolTip">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmButtonColumn.InvokeButtonClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Provides a way for an owned cell to fire the button clicked event on the column.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmButtonColumn.CellTemplate">
            ------------------------------------------------------------------------------------
            <summary>
            Make sure the template is always a radion button cell.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmButtonColumn.ButtonText">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the text of the button cells in this column.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmButtonColumn.ButtonFont">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the text of the button cells in this column.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmButtonColumn.ButtonWidth">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the width of the button within the column's cells.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmButtonColumn.UseComboButtonStyle">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets a value indicating whether or not to paint a combo box style button
            in the column's owned cells. If false, a push button style is drawn.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmButtonColumn.DrawDefaultComboButtonWidth">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets a value indicating whether or not the combo button's width is
            calculated automatically by the system (based on the theme). This value is only
            relevant when UseComboButtonStyle is true and visual styles in the OS are
            turned on. 
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmButtonColumn.ShowButton">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets a value indicating whether or not to show the button.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmButtonColumn.DrawTextWithEllipsisPath">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets a value indicating whether or not text in the button cells in the
            column will be drawn using ellipsis path string formatting.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmButtonColumn.ButtonToolTip">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the tooltip text for the buttons in the button cells in this column.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.UI.LmButtonColumn.ButtonType.MinimalistCombo">
            <summary>Draws just a simple drop-down arrow with no button border or background.</summary>
        </member>
        <member name="F:L10NSharp.UI.LmButtonColumn.ButtonType.PlainCombo">
            <summary>Draws a plain combo box button, not using visual styles.</summary>
        </member>
        <member name="F:L10NSharp.UI.LmButtonColumn.ButtonType.PlainPush">
            <summary>Draws a plain push button, not using visual styles.</summary>
        </member>
        <member name="F:L10NSharp.UI.LmButtonColumn.ButtonType.VisualStyleCombo">
            <summary>Draws a combo box button using current visual style.</summary>
        </member>
        <member name="F:L10NSharp.UI.LmButtonColumn.ButtonType.VisualStylePush">
            <summary>Draws a normal button using current visual style.</summary>
        </member>
        <member name="T:L10NSharp.UI.LmGrid">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.#ctor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnSizeChanged(System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Update the water mark when the grid changes size.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnGotFocus(System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnLeave(System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Update the water mark when the grid scrolls.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Paints a water mark when the results are stale (i.e. the query settings have been
            changed since the results were shown).
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            ------------------------------------------------------------------------------------
            <summary>
            When a cell is in the edit mode and all the text in the edit control is selected,
            pressing the home key changes the cell to the first cell in the row and pressing
            the end key changes the cell to the last cell in the row. This seems counter
            intuitive. I would expect the cursor to move to the beginning or end of the text
            within the edit control, therefore, this method will trap those two keys and
            force this desired behavior, then eat the key message as though it wasn't
            dispatched.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.ProcessHomeAndEndKeys(System.Windows.Forms.TextBoxBase,System.Windows.Forms.Keys)">
            ------------------------------------------------------------------------------------
            <summary>
            Processes the home and end keys.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.ProcessUpKey(System.Windows.Forms.TextBox)">
            ------------------------------------------------------------------------------------
            <summary>
            Processes up key when a grid cell is in the edit mode. This overrides the default
            behavior in a grid cell when it's being edited so using the up arrow will move the
            IP up one line rather than moving to the previous row.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.ProcessDownKey(System.Windows.Forms.TextBox)">
            ------------------------------------------------------------------------------------
            <summary>
            Processes down key when a grid cell is in the edit mode. This overrides the default
            behavior in a grid cell when it's being edited so using the down arrow will move the
            IP down one line rather than moving to the next row.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            In order to achieve double buffering without the problem that arises from having
            double buffering on while sizing rows and columns or dragging columns around,
            monitor when the mouse goes down and turn off double buffering when it goes down
            on a column heading or over the dividers between rows or the dividers between
            columns.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            When double buffering is off, it means it was turned off in the cell mouse down
            event. Therefore, turn it back on.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            For checkbox columns, force the click on the checkbox to get committed right
            away. I can't think of when that wouldn't be expected.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnCurrentCellDirtyStateChanged(System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Check if we need to modify the drop-down style of the grid's combo box.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnGetComboCellList(System.Windows.Forms.DataGridViewCell,System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.InitializeComboCellList(System.Windows.Forms.ComboBox,System.Collections.Generic.KeyValuePair{System.Object,System.Collections.Generic.IEnumerable{System.Object}})">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.HandleEditControlTextBoxPanelPaint(System.Object,System.Windows.Forms.PaintEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.SortComboList(System.Windows.Forms.ComboBox)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.GetRows">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.GetColumnName(System.Int32)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.GetCurrentColumnName">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.MakeFirstVisibleCellCurrentInRow(System.Int32)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.AddRow(System.Object[])">
            ------------------------------------------------------------------------------------
            <summary>
            For grids containing combo box columns created using the
            CreateDropDownComboBoxColumn method, this way of adding rows should be used since
            it will verify (before adding the row to the rows collection) that items added
            to those columns will have corresponding items in their drop-down list.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.VerifyComboItemsFromRow(System.Windows.Forms.DataGridViewRow)">
            ------------------------------------------------------------------------------------
            <summary>
            This method will go through the values in the specified row and verify, that for
            each DropDown style combo. item in the row, the combo. list contains the item in
            the row.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.SelectAdjacentVisibleColumn(System.Boolean)">
            ------------------------------------------------------------------------------------
            <summary>
            Selects the first, visible column that is adjacent to the current column (i.e.
            the column of the current cell). When searchLeftFirst is true, an attempt will
            be made to first find a visible column to the left of the current column. If
            that fails, then an attempt is made to find a visible column to the right of the
            current column. Of course, if searchLeftFirst is false, then searching right is
            first, then left. If a new column is successfully selected, true is returned.
            Otherwise, false is returned. 
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnCurrentCellChanged(System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnDrawExtendedColumnHeaderRow(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            This method fills in the gap between the header of the last visible column and the
            right edge of the grid. That gap is filled with something that looks like one long
            empty column header.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnDrawFocusRectangle(System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
            --------------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            This will only deal with painting in the area between the right edge of the
            furthest right displayed cell and the right edge of the grid's client area.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.InvalidateRowInFullRowSelectMode(System.Int32)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.OnCurrentRowChanged(System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.CreateTextBoxColumn(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Creates a text box grid column.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.CreateTextBoxColumn(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Creates a text box grid column.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.CreateDropDownListComboBoxColumn(System.String,System.Collections.Generic.IEnumerable{System.String})">
            ------------------------------------------------------------------------------------
            <summary>
            Creates a combo. box grid column whose cell values must be chosen from the
            drop-down list.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.CreateDropDownListComboBoxColumn(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            ------------------------------------------------------------------------------------
            <summary>
            Creates a combo. box grid column whose cell values must be chosen from the
            drop-down list.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.CreateDropDownListComboBoxColumn(System.String,System.Collections.ArrayList)">
            ------------------------------------------------------------------------------------
            <summary>
            Creates a combo. box grid column whose cell values must be chosen from the
            drop-down list.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.CreateDropDownListComboBoxColumn(System.String,System.Object[])">
            ------------------------------------------------------------------------------------
            <summary>
            Creates a combo. box grid column whose cell values must be chosen from the
            drop-down list.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.CreateDropDownComboBoxColumn(System.String,System.Collections.Generic.IEnumerable{System.String})">
            ------------------------------------------------------------------------------------
            <summary>
            Creates a combo. box grid column whose cell values can be set by choosing a value
            from the drop-down list or by typing one into the cell, even one that doesn't
            appear in the drop-down list. If a value is typed into the cell that doesn't
            appear in the drop-down list, that value is added to the list when the cell is
            validated.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.CreateDropDownComboBoxColumn(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            ------------------------------------------------------------------------------------
            <summary>
            Creates a combo. box grid column whose cell values can be set by choosing a value
            from the drop-down list or by typing one into the cell, even one that doesn't
            appear in the drop-down list. If a value is typed into the cell that doesn't
            appear in the drop-down list, that value is added to the list when the cell is
            validated.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.CreateDropDownComboBoxColumn(System.String,System.Collections.ArrayList)">
            ------------------------------------------------------------------------------------
            <summary>
            Creates a combo. box grid column whose cell values can be set by choosing a value
            from the drop-down list or by typing one into the cell, even one that doesn't
            appear in the drop-down list. If a value is typed into the cell that doesn't
            appear in the drop-down list, that value is added to the list when the cell is
            validated.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.CreateDropDownComboBoxColumn(System.String,System.Object[])">
            ------------------------------------------------------------------------------------
            <summary>
            Creates a combo. box grid column whose cell values can be set by choosing a value
            from the drop-down list or by typing one into the cell, even one that doesn't
            appear in the drop-down list. If a value is typed into the cell that doesn't
            appear in the drop-down list, that value is added to the list when the cell is
            validated.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.CreateCheckBoxColumn(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Creates a check box grid column.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.CreateImageColumn(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Creates an image grid column.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.LmGrid.CreateSilButtonColumn(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Creates a SilButtonColumn grid column.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="E:L10NSharp.UI.LmGrid.CurrentRowChanged">
            <summary>Occurs when a row is entered and after the current row's index changes.</summary>
        </member>
        <member name="P:L10NSharp.UI.LmGrid.RowCountLessNewRow">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the count of rows in the grid, excluding the new row (which really isn't a
            row until someone enters data into it).
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.IsDirty">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets a value indicating whether or not the grid's contents are dirty.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.PaintHeaderAcrossFullGridWidth">
            ------------------------------------------------------------------------------------
            <summary>
            Paints a header in the gap (if there is one) between the furthest right column and
            the right edge of the grid control.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.ExtendFullRowSelectRectangleToEdge">
            ------------------------------------------------------------------------------------
            <summary>
            When the selection mode is full row and the right edge of the last column doesn't
            extend to the right edge of the client area, setting this flag to true will cause
            the full row selection rectangle to extend all the way to the right edge of the
            grid.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.PaintFullRowFocusRectangle">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.DrawTextBoxEditControlBorder">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets a value determining whether or not to draw a border around a text
            box cell's edit control when the cell is in the edit mode.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.TextBoxEditControlBorderColor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.FullRowFocusRectangleColor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.SelectedCellForeColor">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the foreground color of the current cell in the current row
            (i.e. when full row select is true). When this value is Color.Empty
            (i.e. default), then the default selection color is used.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.SelectedRowForeColor">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the foreground color of cells that are not current but are in the
            current row (i.e. when full row select is true). When this value is Color.Empty
            (i.e. default), then the default selection color is used.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.SelectedCellBackColor">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the background color of the current cell in the current row
            (i.e. when full row select is true). When this value is Color.Empty
            (i.e. default), then the default selection color is used.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.SelectedRowBackColor">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the background color of cells that are not current but are in the
            current row (i.e. when full row select is true). When this value is Color.Empty
            (i.e. default), then the default selection color is used.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.ShowWaterMarkWhenDirty">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets a value indicating whether or not a water mark is shown when the grid
            is dirty.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.WaterMark">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the character displayed as the water mark.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.WaterMarkRectangle">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the rectangle in which the watermark is drawn.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.VScrollBar">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.LmGrid.HScrollBar">
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.UILanguageComboBox">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.UILanguageComboBox.#ctor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.UILanguageComboBox.RefreshList">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.UILanguageComboBox.DesignMode">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a value indicating whether or not the extender is currently in design mode.
            I have had some problems with the base class' DesignMode property being true
            when in design mode. I'm not sure why, but adding a couple more checks fixes the
            problem.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.UILanguageComboBox.SelectedLanguage">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.UILanguageComboBox.IsDirty">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.UILanguageComboBox.ShowOnlyLanguagesHavingLocalizations">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.XButton">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.XButton.#ctor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.XButton.OnSystemColorsChanged(System.EventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.XButton.OnMouseLeave(System.EventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Repaint the button when the mouse isn't over it.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.XButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Change appearance when mouse is pressed.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.XButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Change appearance when the mouse button is released.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.XButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Track when the mouse leaves the control when a mouse button is pressed.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.XButton.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.XButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.XButton.DrawText(System.Windows.Forms.PaintEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Draws the button's text.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.XButton.DrawWithX(System.Windows.Forms.PaintEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Draw the button with text.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.XButton.DrawWithImage(System.Windows.Forms.PaintEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Draws the button with an image.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.XButton.DrawArrow(System.Windows.Forms.PaintEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Draws the button with an image.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.XButton.GetCorrectVisualStyleArrowElement">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the correct visual style arrow button and in the correct state.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="E:L10NSharp.UI.XButton.DrawBackground">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.XButton.CanBeChecked">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets a value indicating whether or not the button's checked state changes
            when clicked.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.XButton.Checked">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets a value indicating whether or not the button is checked.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.XButton.DrawEmpty">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets a value indicating whether or not an X is drawn on the button when no
            image, text or arrow direction is specified. By default, when no image, text or
            arrow direction is specified, the button is drawn with an X (like a close window-
            type of X). However, when DrawEmtpy is true, nothing will be drawn except the
            highlighted look given when the mouse is over or down or when the button is checked.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.XButton.Image">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.XButton.DrawLeftArrowButton">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets a value indicating whether or not the button should be drawn with a
            left pointing arrow (like the left button of a horizontal scrollbar).
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.UI.XButton.DrawRightArrowButton">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets a value indicating whether or not the button should be drawn with a
            right pointing arrow (like the right button of a horizontal scrollbar).
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.XButton.DrawBackgroundHandler">
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.UI.Utils">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.Utils.SetWindowRedraw(System.Windows.Forms.Control,System.Boolean)">
            ------------------------------------------------------------------------------------
            <summary>
            Turns window redrawing on or off. After turning on, the window will be invalidated.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.Utils.SetWindowRedraw(System.Windows.Forms.Control,System.Boolean,System.Boolean)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.UI.Utils.GetProperty(System.Object,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the specified property on the specified binding.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.TMXUtils.TMXBaseWithNotesAndProps">
            ----------------------------------------------------------------------------------------
            <summary>
            This class serves as the base class for TMX elements that contain notes and props
            (i.e. the header, translation unit and translation unit variant elements).
            </summary>
            ----------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXBaseWithNotesAndProps._notes">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXBaseWithNotesAndProps._props">
            <summary></summary>
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXBaseWithNotesAndProps.CopyNotes">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXBaseWithNotesAndProps.CopyProps">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXBaseWithNotesAndProps.AddNote(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Adds a note to the notes list.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXBaseWithNotesAndProps.AddNote(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Adds a note to the notes list.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXBaseWithNotesAndProps.AddNote(L10NSharp.TMXUtils.TMXNote)">
            ------------------------------------------------------------------------------------
            <summary>
            Adds a note to the notes list.
            </summary>
            <param name="note">The note.</param>
            <returns>true if the note was added successfully. Otherwise, false.</returns>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXBaseWithNotesAndProps.AddProp(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Adds a property.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXBaseWithNotesAndProps.AddProp(System.String,System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Adds a property.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXBaseWithNotesAndProps.AddProp(L10NSharp.TMXUtils.TMXProp)">
            ------------------------------------------------------------------------------------
            <summary>
            Adds a property.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXBaseWithNotesAndProps.SetPropValue(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Sets the value of the property with the specified type. If a property for the
            specified type doesn't exist, then one is added.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXBaseWithNotesAndProps.GetPropValue(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the value of the property with the specified type. If a property for the
            specified type doesn't exist, then null is returned.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.TMXUtils.TMXBody">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXBody.GetTransUnitForId(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the translation unit for the specified id.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXBody.GetTransUnitForOrphanWithId(System.String)">
            <summary>
            When all but the last part of the id changed, this can help reunite thigns
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXBody.AddTransUnit(L10NSharp.TMXUtils.TransUnit)">
            ------------------------------------------------------------------------------------
            <summary>
            Adds the specified translation unit.
            </summary>
            <param name="tu">The translation unit.</param>
            <returns>true if the translation unit was successfully added. Otherwise, false.</returns>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXBody.AddTransUnitOrVariantFromExisting(L10NSharp.TMXUtils.TransUnit,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            If a translation unit does not already exist for the id in the specified
            translation unit, then the translation unit is added. Otherwise, if the variant
            for the specified language does not exist in the translation unit, it is added.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXBody.RemoveTransUnit(L10NSharp.TMXUtils.TransUnit)">
            ------------------------------------------------------------------------------------
            <summary>
            Removes the specified translation unit.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXBody.TransUnits">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the list of translation units in the header.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.TMXUtils.TMXDocument">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXDocument.#ctor">
            ------------------------------------------------------------------------------------
            <summary>
            Initializes a new instance of the <see cref="T:L10NSharp.TMXUtils.TMXDocument"/> class.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXDocument.GetTransUnitForId(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the translation unit for the specified id.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXDocument.GetTransUnitsForTextInLang(System.String,System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXDocument.GetAllVariantLanguagesFound">
            ------------------------------------------------------------------------------------
            <summary>
            Gets all the unique language ids found in the TMX file.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXDocument.AddTransUnit(L10NSharp.TMXUtils.TransUnit)">
            ------------------------------------------------------------------------------------
            <summary>
            Adds the specified translation unit.
            </summary>
            <param name="tu">The translation unit.</param>
            <returns>true if the translation unit was successfully added. Otherwise, false.</returns>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXDocument.RemoveTransUnit(L10NSharp.TMXUtils.TransUnit)">
            ------------------------------------------------------------------------------------
            <summary>
            Remove the specified translation unit.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXDocument.Save(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Saves the TMXDocument to the specified TMX file.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXDocument.Read(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Reads the specified TMX file and returns a TMXDocument containing the information
            in the file.
            </summary>
            <param name="tmxFile">The TMX file to read.</param>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXDocument.GetTransUnitForOrphanWithId(System.String)">
            <summary>
            When we change ids after people have already been localizing, we have a BIG PROBLEM.
            This helps with the common case were we just changed the hierarchical organizaiton of the id,
            that is, the parts of the id before th final '.'.
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXDocument.Version">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the TMX version.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXDocument.Header">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the header.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXDocument.Body">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the body.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.TMXUtils.TMXHeader">
            ----------------------------------------------------------------------------------------
            <summary>
            TMX header
            </summary>
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXHeader.#ctor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXHeader.SourceLang">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the source language found in the TMX file's header.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXHeader.AdminLang">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the default language for the administrative and informative
            elements 'note' and 'prop'.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXHeader.CreationTool">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the tool that created the translation memory file.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXHeader.CreationToolVersion">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the version of the tool that created the translation memory file.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXHeader.SegmentType">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the segment type used for translation units (tu) when
            translation units don't specify a segment type.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXHeader.DataType">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the type of data.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXHeader.OrigTransMemFmt">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the original translation memory format which specifies the
            format of the translation memory file from which the TMX document or segment thereof
            have been generated.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXHeader.Notes">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the list of translation notes in the document header.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXHeader.Props">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the list of props in the translation unit.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.TMXUtils.TMXNote">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXNote.Copy">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXNote.ToString">
            ------------------------------------------------------------------------------------
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXNote.AddNote(System.String,System.Collections.Generic.List{L10NSharp.TMXUtils.TMXNote})">
            ------------------------------------------------------------------------------------
            <summary>
            Adds the note.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXNote.AddNote(System.String,System.String,System.Collections.Generic.List{L10NSharp.TMXUtils.TMXNote})">
            ------------------------------------------------------------------------------------
            <summary>
            Adds the note.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXNote.AddNote(L10NSharp.TMXUtils.TMXNote,System.Collections.Generic.List{L10NSharp.TMXUtils.TMXNote})">
            ------------------------------------------------------------------------------------
            <summary>
            Adds the note.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXNote.Lang">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the lang.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXNote.Text">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the note's content.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXNote.IsEmpty">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.TMXUtils.TMXProp">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXProp.Copy">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXProp.AddProp(System.String,System.String,System.Collections.Generic.List{L10NSharp.TMXUtils.TMXProp})">
            ------------------------------------------------------------------------------------
            <summary>
            Adds a property.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXProp.AddProp(System.String,System.String,System.String,System.Collections.Generic.List{L10NSharp.TMXUtils.TMXProp})">
            ------------------------------------------------------------------------------------
            <summary>
            Adds a property.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXProp.AddProp(L10NSharp.TMXUtils.TMXProp,System.Collections.Generic.List{L10NSharp.TMXUtils.TMXProp})">
            ------------------------------------------------------------------------------------
            <summary>
            Adds a property.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXProp.ToString">
            ------------------------------------------------------------------------------------
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXProp.Type">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the property's type.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXProp.Lang">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the property's language Id.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXProp.Value">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the property's value.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXProp.IsEmpty">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.TMXUtils.TMXSegment">
            ----------------------------------------------------------------------------------------
            <summary>
            This handles TMX segments and just combines all the values from in-line elements. If
            support for in-line elements is ever needed, then this class will need to be modified.
            </summary>
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXSegment.Append(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Appends the specified value to the segment.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXSegment.ClearValue">
            ------------------------------------------------------------------------------------
            <summary>
            Clears the value.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXSegment.ToString">
            ------------------------------------------------------------------------------------
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXSegment.Value">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the value.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXSegment.bpt">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the BPT.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXSegment.ept">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the ept.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXSegment.hi">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the hi.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXSegment.it">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets it.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXSegment.ph">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the ph.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXSegment.sub">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the sub.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXSegment.ut">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the ut.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.TMXUtils.TMXTags">
            ----------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ----------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagRoot">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagHdr">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagBody">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagNote">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagUserDefEnc">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagProp">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagMap">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagSegment">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagTransUnit">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagTransUnitVariant">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagBegPaired">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagEndPaired">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagHighlight">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagIsolated">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagPlaceholder">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagSubflow">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagUnknown">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagTransUnitId">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagCreationDate">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagCreationId">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagCreationTool">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagCreationToolVer">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagLastModDate">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagLastModId">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagType">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagDataType">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagSegType">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagCode">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagSubstitutionText">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagEntity">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagBaseEnc">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagUsageCount">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagLastUsageDate">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagName">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagIntMatching">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagExtMatching">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagPosition">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagAssociation">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagUnicode">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagVersion">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagOrigTransMemFmt">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagAdminLang">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagLang">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagOrigEnc">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.kTagSrcLang">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXTags.#cctor">
            ------------------------------------------------------------------------------------
            <summary>
            Initializes the <see cref="T:L10NSharp.TMXUtils.TMXTags"/> class.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXTags.GetSegmentType(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the segment type.
            </summary>
            <param name="segtype">The segment type as a string.</param>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.TMXUtils.TMXTags.TMXDataType">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.unknown">
            <summary>undefined</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.alptext">
            <summary>WinJoust data</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.cdf">
            <summary>Channel Definition Format</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.cmx">
            <summary>Corel CMX Format</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.cpp">
            <summary>C and C++ style text</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.hptag">
            <summary>HP-Tag</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.html">
            <summary>HTML, DHTML, etc</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.interleaf">
            <summary>Interleaf documents</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.ipf">
            <summary>IPF/BookMaster</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.java">
            <summary>Java, source and property files</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.javascript">
            <summary>JavaScript, ECMAScript scripts</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.lisp">
            <summary>Lisp</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.mif">
            <summary>Framemaker MIF, MML, etc</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.opentag">
            <summary>OpenTag data</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.pascal">
            <summary>Pascal, Delphi style text</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.plaintext">
            <summary>Plain text</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.pm">
            <summary>PageMaker</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.rtf">
            <summary>Rich Text Format</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.sgml">
            <summary>SGML</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.stf_f">
            <summary>S-Tagger for FrameMaker</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.stf_i">
            <summary>S-Tagger for Interleaf</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.transit">
            <summary>Transit data</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.vbscript">
            <summary>Visual Basic scripts</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.winres">
            <summary>Windows resources from RC, DLL, EXE</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.xml">
            <summary>XML</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXDataType.xptag">
            <summary>Quark XPressTag</summary>
        </member>
        <member name="T:L10NSharp.TMXUtils.TMXTags.TMXType">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.undefined">
            <summary>Undefined type</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.bold">
            <summary>Bold</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.color">
            <summary>Color change</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.dulined">
            <summary>Doubled-underlined</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.font">
            <summary>Font change</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.italic">
            <summary>Italic</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.link">
            <summary>Linked text</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.scap">
            <summary>Small caps</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.strct">
            <summary>XML/SGML structure</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.ulined">
            <summary>Underlined</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.index">
            <summary>Index marker</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.date">
            <summary>Date</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.time">
            <summary>Time</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.fnote">
            <summary>Footnote</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.enote">
            <summary>End-note</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.alt">
            <summary>Alternate text</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.image">
            <summary>Image</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.pb">
            <summary>Page break</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.lb">
            <summary>Line break</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.cb">
            <summary>Column break</summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXType.inset">
            <summary>Inset</summary>
        </member>
        <member name="T:L10NSharp.TMXUtils.TMXTags.TMXSegType">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXSegType.undefined">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXSegType.block">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXSegType.paragraph">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXSegType.sentence">
            <summary></summary>
        </member>
        <member name="F:L10NSharp.TMXUtils.TMXTags.TMXSegType.phrase">
            <summary></summary>
        </member>
        <member name="T:L10NSharp.TMXUtils.TMXWriter">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TMXWriter.Write(L10NSharp.TMXUtils.TMXDocument,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Writes the specified TMXDocument information to the specified TMX file.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TMXWriter.TMXFile">
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.TMXUtils.TransUnit">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TransUnit.#ctor">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TransUnit.AddVariant(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Adds a translation unit variant having the specified language id and value.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TransUnit.AddVariant(L10NSharp.TMXUtils.TransUnitVariant)">
            ------------------------------------------------------------------------------------
            <summary>
            Adds the specified variant.
            </summary>
            <param name="tuv">The variant.</param>
            <returns>true if the variant was successfully added. Otherwise, false.</returns>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TransUnit.RemoveVariant(L10NSharp.TMXUtils.TransUnitVariant)">
            ------------------------------------------------------------------------------------
            <summary>
            Removes the specified translation unit variant.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TransUnit.RemoveVariant(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Removes the variant for the specified language.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TransUnit.GetVariantForLang(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the translation unit variant for the specified language id.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TransUnit.ToString">
            ------------------------------------------------------------------------------------
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TransUnit.Id">
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TransUnit.Notes">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the list of translation unit.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TransUnit.Props">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the list of props in the translation unit.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TransUnit.Variants">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the list of translation unit.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TransUnit.IsEmpty">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.TMXUtils.TransUnitVariant">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TransUnitVariant.ClearValue">
            ------------------------------------------------------------------------------------
            <summary>
            Clears all the value. Using the setter to assign the Value property will append
            to the existing values. That is because a translation unit may have more than
            one 'seg' element.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.TransUnitVariant.ToString">
            ------------------------------------------------------------------------------------
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TransUnitVariant.Lang">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the lang.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TransUnitVariant.DataType">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the type of the data.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TransUnitVariant.Notes">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the list of translation notes in the variant.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TransUnitVariant.Props">
            ------------------------------------------------------------------------------------
            <summary>
            Gets the list of props in the variant.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TransUnitVariant.Seg">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the seg. (this is really just for serializing/deserializing).
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TransUnitVariant.Value">
            ------------------------------------------------------------------------------------
            <summary>
            Gets or sets the value of the translation unit variant.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.TransUnitVariant.IsEmpty">
            ------------------------------------------------------------------------------------
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.SerializeToString``1(``0)">
            ------------------------------------------------------------------------------------
            <summary>
            Serializes an object to an XML string.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.SerializeToFile``1(System.String,``0)">
            ------------------------------------------------------------------------------------
            <summary>
            Serializes an object to a the specified file.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.SerializeDataAndWriteAsNode``1(System.Xml.XmlWriter,``0)">
            ------------------------------------------------------------------------------------
            <summary>
            Serializes the specified data to a string and writes that XML using the specified
            writer. Since strings in .Net are UTF16, the serialized XML data string is, of
            course, UTF16. Before the string is written it is converted to UTF8. So the
            assumption is the writer is expecting UTF8 data.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.DeserializeFromString``1(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Deserializes XML from the specified string to an object of the specified type.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.DeserializeFromString``1(System.String,System.Boolean)">
            ------------------------------------------------------------------------------------
            <summary>
            Deserializes XML from the specified string to an object of the specified type.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.DeserializeFromString``1(System.String,System.Exception@)">
            ------------------------------------------------------------------------------------
            <summary>
            Deserializes XML from the specified string to an object of the specified type.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.DeserializeFromString``1(System.String,System.Boolean,System.Exception@)">
            ------------------------------------------------------------------------------------
            <summary>
            Deserializes XML from the specified string to an object of the specified type.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.DeserializeFromFile``1(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Deserializes XML from the specified file to an object of the specified type.
            </summary>
            <typeparam name="T">The object type</typeparam>
            <param name="filename">The filename from which to load</param>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.DeserializeFromFile``1(System.String,System.Boolean)">
            ------------------------------------------------------------------------------------
            <summary>
            Deserializes XML from the specified file to an object of the specified type.
            </summary>
            <typeparam name="T">The object type</typeparam>
            <param name="filename">The filename from which to load</param>
            <param name="fKeepWhitespaceInElements">if set to <c>true</c>, the reader
            will preserve and return elements that contain only whitespace, otherwise
            these elements will be ignored during a deserialization.</param>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.DeserializeFromFile``1(System.String,System.Exception@)">
            ------------------------------------------------------------------------------------
            <summary>
            Deserializes XML from the specified file to an object of the specified type.
            </summary>
            <typeparam name="T">The object type</typeparam>
            <param name="filename">The filename from which to load</param>
            <param name="e">The exception generated during the deserialization.</param>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.DeserializeFromFile``1(System.String,System.Boolean,System.Exception@)">
            ------------------------------------------------------------------------------------
            <summary>
            Deserializes XML from the specified file to an object of the specified type.
            </summary>
            <typeparam name="T">The object type</typeparam>
            <param name="filename">The filename from which to load</param>
            <param name="fKeepWhitespaceInElements">if set to <c>true</c>, the reader
            will preserve and return elements that contain only whitespace, otherwise
            these elements will be ignored during a deserialization.</param>
            <param name="e">The exception generated during the deserialization.</param>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.DeserializeInternal``1(System.Xml.XmlReader)">
            ------------------------------------------------------------------------------------
            <summary>
            Deserializes an object using the specified reader.
            </summary>
            <typeparam name="T">The type of object to deserialize</typeparam>
            <param name="reader">The reader.</param>
            <returns>The deserialized object</returns>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.deserializer_UnknownAttribute(System.Object,System.Xml.Serialization.XmlAttributeEventArgs)">
            ------------------------------------------------------------------------------------
            <summary>
            Handles the UnknownAttribute event of the deserializer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs"/>
            instance containing the event data.</param>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.TMXUtils.XmlSerializationHelper.TMXmlReader">
            ------------------------------------------------------------------------------------
            <summary>
            Custom XmlTextReader that can preserve whitespace characters (spaces, tabs, etc.) 
            that are in XML elements. This allows us to properly handle deserialization of
            paragraph runs that contain runs that contain only whitespace characters.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.TMXmlReader.#ctor(System.IO.TextReader,System.Boolean)">
            --------------------------------------------------------------------------------
            <summary>
            Initializes a new instance of the <see cref="T:L10NSharp.TMXUtils.XmlSerializationHelper.TMXmlReader"/> class.
            </summary>
            <param name="reader">The stream reader.</param>
            <param name="fKeepWhitespaceInElements">if set to <c>true</c>, the reader
            will preserve and return elements that contain only whitespace, otherwise
            these elements will be ignored during a deserialization.</param>
            --------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.TMXmlReader.#ctor(System.String,System.Boolean)">
            --------------------------------------------------------------------------------
            <summary>
            Initializes a new instance of the <see cref="T:L10NSharp.TMXUtils.XmlSerializationHelper.TMXmlReader"/> class.
            </summary>
            <param name="filename">The filename.</param>
            <param name="fKeepWhitespaceInElements">if set to <c>true</c>, the reader
            will preserve and return elements that contain only whitespace, otherwise
            these elements will be ignored during a deserialization.</param>
            --------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.TMXUtils.XmlSerializationHelper.TMXmlReader.Read">
            --------------------------------------------------------------------------------
            <summary>
            Reads the next node from the stream.
            </summary>
            --------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.XmlSerializationHelper.TMXmlReader.NamespaceURI">
            --------------------------------------------------------------------------------
            <summary>
            Gets the namespace URI (as defined in the W3C Namespace specification) of the 
            node on which the reader is positioned.
            </summary>
            <value></value>
            <returns>The namespace URI of the current node; otherwise an empty string.</returns>
            --------------------------------------------------------------------------------
        </member>
        <member name="P:L10NSharp.TMXUtils.XmlSerializationHelper.TMXmlReader.NodeType">
            --------------------------------------------------------------------------------
            <summary>
            Gets the type of the current node.
            </summary>
            --------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.Translators.BingTranslator">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.Translators.TranslatorBase">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.Translators.ITranslator">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.Translators.ITranslator.TranslateText(System.String)">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.Translators.TranslatorBase.m_srcCultureId">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.Translators.TranslatorBase.m_tgtCultureId">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.Translators.TranslatorBase.TranslateText(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Translate the specified text.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.Translators.TranslatorBase.InternalTranslate(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Internal method for translating the specified text.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.Translators.TranslatorBase.PreTranslateProcess(System.String@)">
            ------------------------------------------------------------------------------------
            <summary>
            Prepares the text for google translate by removing accelerator ampersands and
            counting the number of parameters (i.e. "{n}" where n is a number from 0 - n).
            The number of parameters found is returned.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.Translators.TranslatorBase.PostTranslateProcess(System.Int32,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Cleans up a string after it has returned from being translated by Google. The
            paramCount provides the number of parameters that were found in the pretranslated
            string.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.Translators.TranslatorBase.RemoveAcceleratorAmpersands(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Removes accelerator ampersands from the specified text.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.Translators.BingTranslator.m_translator">
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.Translators.BingTranslator.#ctor(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Initializes a new instance of the <see cref="T:L10NSharp.Translators.BingTranslator"/> class.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.Translators.BingTranslator.ValidateLocale(System.Collections.Generic.IEnumerable{System.String},System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Validates the locale.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.Translators.BingTranslator.InternalTranslate(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Internal method for translating the specified text.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.Translators.GoogleTranslator">
            ----------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.Translators.GoogleTranslator.#ctor(System.String,System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="M:L10NSharp.Translators.GoogleTranslator.InternalTranslate(System.String)">
            ------------------------------------------------------------------------------------
            <summary>
            Internal method for translating the specified text.
            </summary>
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.Translators.JSONResponse">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.Translators.JSONResponse.responseData">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.Translators.JSONResponse.responseDetails">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.Translators.JSONResponse.responseStatus">
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.Translators.TranslationResponseData">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.Translators.TranslationResponseData.translatedText">
            ------------------------------------------------------------------------------------
        </member>
        <member name="T:L10NSharp.Translators.TranslatorTypes">
            ----------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.Translators.TranslatorTypes.Google">
            ------------------------------------------------------------------------------------
        </member>
        <member name="F:L10NSharp.Translators.TranslatorTypes.Bing">
            ------------------------------------------------------------------------------------
        </member>
    </members>
</doc>
